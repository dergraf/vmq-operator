language: go
sudo: required

# from https://github.com/water-hole/ansible-operator/blob/master/.travis.yml

go_import_path: github.com/vernemq/vmq-operator

env:
  - CHANGE_MINIKUBE_NONE_USER=true

install:
  # setup operator-sdk
  - go get github.com/golang/dep/cmd/dep
  - mkdir -p $GOPATH/src/github.com/operator-framework
  - cd $GOPATH/src/github.com/operator-framework
  - git clone https://github.com/operator-framework/operator-sdk
  - cd operator-sdk
  - git checkout master
  - make dep
  - make install
  - cd $GOPATH/src/github.com/vernemq/vmq-operator
  - dep ensure
  - operator-sdk build vernemq/vmq-operator:travis

jobs:
  include:
    - stage: test
      before_script:
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.11.2/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
        - sudo minikube start --vm-driver=none
        - minikube update context
        # Wait until node is ready
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      script:
        # create example CRD and operator
        - sed -i 's/vernemq\/vmq-operator:latest/vernemq\/vmq-operator:travis/g' deploy/operator.yaml
        - kubectl create -f deploy/service_account.yaml
        - kubectl create -f deploy/role.yaml
        - kubectl create -f deploy/role_binding.yaml
        - kubectl create -f deploy/operator.yaml
        - kubectl create -f deploy/crds/vernemq_v1alpha1_vernemq_crd.yaml

        # wait for operator pod to run
        - kubectl rollout status deployment/vmq-operator
        - kubectl logs deployment/vmq-operator

        # deploy example resource and check for test string
        - kubectl create -f deploy/crds/vernemq_v1alpha1_vernemq_cr.yaml
        - (kubectl get statefulset | grep vernemq) ; while [ $? -ne 0 ] ; do sleep 5 && kubectl get statefulset && (kubectl get statefulset | grep vernemq) ; done
        - vernemq_statefulset=$(kubectl get statefulset | grep vernemq | awk '{print $1}')
        - kubectl rollout status statefulset/${vernemq_statefulset}
        - kubectl logs statefulset/${vernemq_statefulset} | grep "UP"
        - kubectl delete -f deploy/crds/vernemq_v1alpha1_vernemq_cr.yaml
        # Test finalizer
        - kubectl wait vernemq/example-vernemq --for=delete --timeout=1m || true
        - kubectl logs deployment/vmq-operator | grep "finalizer_running"
#    - stage: deploy
#      script:
#        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin quay.io
#        - docker tag quay.io/water-hole/ansible-operator quay.io/water-hole/ansible-operator
#        - docker push quay.io/water-hole/ansible-operator
#        - cd $GOPATH/src/github.com/water-hole/ansible-operator/example
#        - docker build -f build/Dockerfile -t quay.io/water-hole/busybox-ansible-operator .
#        - docker push quay.io/water-hole/busybox-ansible-operator
#
#    - stage: deploy-release
#      script:
#        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin quay.io
#        - docker tag quay.io/water-hole/ansible-operator quay.io/water-hole/ansible-operator:${TRAVIS_TAG}
#        - docker push quay.io/water-hole/ansible-operator:${TRAVIS_TAG}
#        - cd $GOPATH/src/github.com/water-hole/ansible-operator/example
#        - docker build -t quay.io/water-hole/busybox-ansible-operator:${TRAVIS_TAG} .
#        - docker push quay.io/water-hole/busybox-ansible-operator:${TRAVIS_TAG}
stages:
  - test
#  - name: deploy
#    if: (tag IS blank) AND (branch = master) AND (type = push)
#  - name: deploy-release
#    if: (tag IS present) AND (type = push)